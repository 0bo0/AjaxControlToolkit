//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ImagesModel", "FK_Images_Contributor", "People", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ImagesModel.People), "Images", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ImagesModel.Images))]
[assembly: EdmRelationshipAttribute("ImagesModel", "FK_Tags_CreatedBy", "People", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ImagesModel.People), "Tags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ImagesModel.Tags))]
[assembly: EdmRelationshipAttribute("ImagesModel", "ImageTags", "Images", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ImagesModel.Images), "Tags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ImagesModel.Tags))]

#endregion

namespace ImagesModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ImagesEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ImagesEntities object using the connection string found in the 'ImagesEntities' section of the application configuration file.
        /// </summary>
        public ImagesEntities() : base("name=ImagesEntities", "ImagesEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ImagesEntities object.
        /// </summary>
        public ImagesEntities(string connectionString) : base(connectionString, "ImagesEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ImagesEntities object.
        /// </summary>
        public ImagesEntities(EntityConnection connection) : base(connection, "ImagesEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Images> Images
        {
            get
            {
                if ((_Images == null))
                {
                    _Images = base.CreateObjectSet<Images>("Images");
                }
                return _Images;
            }
        }
        private ObjectSet<Images> _Images;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<People> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<People>("People");
                }
                return _People;
            }
        }
        private ObjectSet<People> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tags> Tags
        {
            get
            {
                if ((_Tags == null))
                {
                    _Tags = base.CreateObjectSet<Tags>("Tags");
                }
                return _Tags;
            }
        }
        private ObjectSet<Tags> _Tags;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Images EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImages(Images images)
        {
            base.AddObject("Images", images);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(People people)
        {
            base.AddObject("People", people);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTags(Tags tags)
        {
            base.AddObject("Tags", tags);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImagesModel", Name="Images")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Images : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Images object.
        /// </summary>
        /// <param name="imageID">Initial value of the ImageID property.</param>
        public static Images CreateImages(global::System.Int32 imageID)
        {
            Images images = new Images();
            images.ImageID = imageID;
            return images;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageID
        {
            get
            {
                return _ImageID;
            }
            set
            {
                if (_ImageID != value)
                {
                    OnImageIDChanging(value);
                    ReportPropertyChanging("ImageID");
                    _ImageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImageID");
                    OnImageIDChanged();
                }
            }
        }
        private global::System.Int32 _ImageID;
        partial void OnImageIDChanging(global::System.Int32 value);
        partial void OnImageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Uri
        {
            get
            {
                return _Uri;
            }
            set
            {
                OnUriChanging(value);
                ReportPropertyChanging("Uri");
                _Uri = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Uri");
                OnUriChanged();
            }
        }
        private global::System.String _Uri;
        partial void OnUriChanging(global::System.String value);
        partial void OnUriChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImagesModel", "FK_Images_Contributor", "People")]
        public People Contributor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<People>("ImagesModel.FK_Images_Contributor", "People").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<People>("ImagesModel.FK_Images_Contributor", "People").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<People> ContributorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<People>("ImagesModel.FK_Images_Contributor", "People");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<People>("ImagesModel.FK_Images_Contributor", "People", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImagesModel", "ImageTags", "Tags")]
        public EntityCollection<Tags> Tags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tags>("ImagesModel.ImageTags", "Tags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tags>("ImagesModel.ImageTags", "Tags", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImagesModel", Name="People")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class People : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new People object.
        /// </summary>
        /// <param name="personID">Initial value of the PersonID property.</param>
        public static People CreatePeople(global::System.Int32 personID)
        {
            People people = new People();
            people.PersonID = personID;
            return people;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImagesModel", "FK_Images_Contributor", "Images")]
        public EntityCollection<Images> Images
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Images>("ImagesModel.FK_Images_Contributor", "Images");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Images>("ImagesModel.FK_Images_Contributor", "Images", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImagesModel", "FK_Tags_CreatedBy", "Tags")]
        public EntityCollection<Tags> Tags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tags>("ImagesModel.FK_Tags_CreatedBy", "Tags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tags>("ImagesModel.FK_Tags_CreatedBy", "Tags", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ImagesModel", Name="Tags")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tags : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tags object.
        /// </summary>
        /// <param name="tagID">Initial value of the TagID property.</param>
        public static Tags CreateTags(global::System.Int32 tagID)
        {
            Tags tags = new Tags();
            tags.TagID = tagID;
            return tags;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TagID
        {
            get
            {
                return _TagID;
            }
            set
            {
                if (_TagID != value)
                {
                    OnTagIDChanging(value);
                    ReportPropertyChanging("TagID");
                    _TagID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TagID");
                    OnTagIDChanged();
                }
            }
        }
        private global::System.Int32 _TagID;
        partial void OnTagIDChanging(global::System.Int32 value);
        partial void OnTagIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImagesModel", "FK_Tags_CreatedBy", "People")]
        public People CreatedBy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<People>("ImagesModel.FK_Tags_CreatedBy", "People").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<People>("ImagesModel.FK_Tags_CreatedBy", "People").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<People> CreatedByReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<People>("ImagesModel.FK_Tags_CreatedBy", "People");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<People>("ImagesModel.FK_Tags_CreatedBy", "People", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ImagesModel", "ImageTags", "Images")]
        public EntityCollection<Images> Images
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Images>("ImagesModel.ImageTags", "Images");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Images>("ImagesModel.ImageTags", "Images", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
